//Given a sorted array A[] of size N, delete all the duplicated elements from A[]. 
//Modify the array such that if there are X distinct elements in it then the first X positions of the array should be filled with 
//them in increasing order and return the number of distinct elements in the array.

//Note:
//1. Don't use set or HashMap to solve the problem.
//2. You must return the number of distinct elements(X) in the array, the driver code will print all the elements of the modified array from index 0 to X-1 as output of your code.


class Solution {
    int remove_duplicate(int A[],int N){
        if(N == 0 || N == 1){
            return N;
        }
        int j = 0;
        for(int i=0; i<N-1; i++){
            if(A[i] != A[i+1]){
                A[j] = A[i];
                j++;
            }
        }
        A[j] = A[N-1];
        j++;
        return j;
    }
}
