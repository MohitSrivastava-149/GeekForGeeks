//Given two numbers M and N. The task is to find the position of the rightmost different bit in the binary representation of numbers. 
//If both M and N are the same then return -1 in this case.


class Solution
{
    //Function to find the first position with different bits.
    public static int posOfRightMostDiffBit(int m, int n)
    {
        if(m==n){
           return -1; 
        } 
        int count = 1;
        while((n!=0) || (m!=0)){
            if(((m%2==0) && (n%2==1)) || ((m%2==1) && (n%2==0))){
                break;
            }
            count++;
            m = m/2;
            n = n/2;
        }
        return count;
    }
}
